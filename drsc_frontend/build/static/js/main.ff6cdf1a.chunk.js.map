{"version":3,"sources":["constants/productConstants.js","components/Rating.js","components/Product.js","components/LoadingBox.js","components/MessageBox.js","screens/HomeScreen.js","actions/productActions.js","data.js","screens/ProductScreen.js","constants/cartConstants.js","actions/cartActions.js","screens/CartScreen.js","constants/userConstants.js","screens/SigninScreen.js","actions/userActions.js","screens/RegisterScreen.js","components/CheckoutSteps.js","screens/PaymentMethodScreen.js","screens/ShippingAddressScreen.js","constants/orderConstants.js","screens/PlaceOrderScreen.js","actions/orderActions.js","screens/OrderScreen.js","screens/OrderHistoryScreen.js","screens/ProfileScreen.js","components/PrivateRoute.js","App.js","reducers/productReducers.js","store.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","Rating","props","rating","numReviews","className","Product","product","src","image","alt","name","to","_id","price","LoadingBox","MessageBox","variant","children","HomeScreen","dispatch","useDispatch","productList","useSelector","state","loading","error","products","useEffect","a","type","Axios","get","data","payload","message","map","category","images","ProductScreen","productId","match","params","id","useState","qty","setQty","productDetails","response","detailsProduct","description","countInStock","value","onChange","e","target","Array","keys","x","onClick","history","push","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_EMPTY","addToCart","getState","localStorage","setItem","JSON","stringify","cart","cartItems","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromcart","length","item","reduce","c","disabled","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_SIGNOUT","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","SigninScreen","email","setEmail","password","setPassword","redirect","userSignin","userInfo","onSubmit","preventDefault","post","signin","htmlFor","placeholder","required","RegisterScreen","setName","ConfirmPassword","setConfirmPassword","userRegister","alert","register","CheckoutSteps","step1","step2","step3","step4","PaymentMethodScreen","shippingAddress","address","paymentMethod","setPaymentMethod","checked","ShippingAddressScreen","fullName","setFullName","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_MINE_LIST_REQUEST","ORDER_MINE_LIST_SUCCESS","ORDER_MINE_LIST_FAIL","PlaceOrderScreen","orderCreate","success","order","toPrice","num","toFixed","itemsPrice","shippingPrice","taxPrice","totalPrice","headers","Authorization","token","removeItem","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","errorPay","successPay","addPayPalScript","script","document","createElement","async","onload","body","appendChild","detailsOrder","isPaid","window","paypal","isDelivered","deliveredAt","paidAt","amount","onSuccess","paymentResult","put","payOrder","OrderHistoryScreen","orderMineList","orders","createdAt","substring","ProfileScreen","confirmPassword","userDetails","user","userUpdateProfile","successUpdate","errorUpdate","loadingUpdate","userId","updateUserProfile","PrivateRoute","Component","component","rest","render","App","isAdmin","path","exact","require","initialState","getItem","parse","reducer","combineReducers","action","existItem","find","filter","carItems","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ff6cdf1a.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'; \n\n","import React from 'react'\n\nexport default function Rating(props) {\n    const { rating, numReviews } = props\n    return (\n        <div>\n            <div className=\"rating\">\n                <span>\n                    <i className={\n                        rating >= 1\n                            ? \"fa fa-star\"\n                            : rating >= 0.5\n                                ? 'fa fa-star-half-o'\n                                : 'fa fa-star-o'\n                    }\n                    ></i>\n                </span>\n                <span>\n                    <i className={\n                        rating >= 2\n                            ? \"fa fa-star\"\n                            : rating >= 1.5\n                                ? 'fa fa-star-half-o'\n                                : 'fa fa-star-o'\n                    }\n                    ></i>\n                </span>\n                <span>\n                    <i className={\n                        rating >= 3\n                            ? \"fa fa-star\"\n                            : rating >= 2.5\n                                ? 'fa fa-star-half-o'\n                                : 'fa fa-star-o'\n                    }\n                    ></i>\n                </span>\n                <span>\n                    <i className={\n                        rating >= 4\n                            ? \"fa fa-star\"\n                            : rating >= 3.5\n                                ? 'fa fa-star-half-o'\n                                : 'fa fa-star-o'\n                    }\n                    ></i>\n                </span>\n                <span>\n                    <i className={\n                        rating >= 5\n                            ? \"fa fa-star\"\n                            : rating >= 4.5\n                                ? 'fa fa-star-half-o'\n                                : 'fa fa-star-o'\n                    }\n                    ></i>\n                </span>\n                <span>{numReviews + ' reviews'}</span>\n            </div>\n        </div>\n    )\n}\n\n\n","import React from 'react'\nimport Rating from './Rating';\nimport { Link } from 'react-router-dom';\n\nexport default function Product(props) {\n    const { product } = props;\n    return (\n            <div key={product._id} className=\"card\">\n                \n                <img className=\"medium\" src={product.image} alt={product.name} />\n                <div className=\"card-body\">\n                    <Link to={`/product/${product._id}`}></Link>\n                    <Link to= {`/product/${product._id}`}>{product.name}</Link>\n                        \n                    <Rating rating={product.rating} numReviews={product.numReviews} />\n            <div className=\"price\">${product.price}</div>\n        </div>\n        </div>\n    )\n}\n\n\n \n\n\n\n\n\n\n\n\n\n","import React from 'react'\n\nexport default function LoadingBox() {\n    return (\n        <div className=\"loading\">\n            <i className=\"fa fa-spinner fa-spin\"></i> Loading...\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function MessageBox(props) {\n    return (\n        <div className={`alert alert-${props.variant || 'info'}`}>\n            {props.children}\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport Product from '../components/Product';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts } from '../actions/productActions';\n\nexport default function HomeScreen() {\n    const dispatch = useDispatch();\n    const productList = useSelector((state) => state.productList);\n    const { loading, error, products } = productList;\n\n    useEffect(() => {\n        dispatch(listProducts());\n    }, [dispatch]);\n    return (\n        <div>\n            {loading ? (\n                <LoadingBox></LoadingBox>\n            ) : error ? (\n                <MessageBox variant=\"danger\">{error}</MessageBox>\n            ) : (\n                        <div className=\"row center\">\n                            { products.map((product) => (\n                                <Product key={product._id} product={product}></Product>\n                            ))}\n                        </div>\n                    )}\n        </div>\n    );\n}","import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS } from \"../constants/productConstants\"\nimport Axios from \"axios\";\n\nexport const listProducts = () => async (dispatch) => {\n    dispatch({\n        type: PRODUCT_LIST_REQUEST\n    });\n    try {\n    const { data } = await Axios.get('/api/products');\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data  }) \n    } catch(error){\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message })\n    }\n};\n\nexport const detailsProduct = (productId) =>  async(dispatch) => {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n    try{\n        const { data } = await  Axios.get(`/api/products/${productId}`);\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n    } catch(error) {\n        dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.response && error.response.data.message ?\n        error.response.data.message : error.message \n    });\n    }\n};","\n\nconst data = {\n    products: [\n        {\n      \n            name: 'berry soap',\n            category: 'handmade soap',\n            image: './images/soap1.jpg',\n            images: '../images/soap1.jpg',\n            price: 120,\n            rating: 3,\n            numReviews: 1,\n            description: 'made with x, y, z'\n        },\n        {\n       \n            name: 'berry soap',\n            category: 'handmade soap',\n            image: './images/soap1.jpg',\n            images: '../images/soap1.jpg',\n            price: 120,\n            rating: 4.5,\n            numReviews: 1,\n            description: 'made with x, y, z'\n        },\n        {\n    \n            name: 'berry soap',\n            category: 'handmade soap',\n            image: './images/soap1.jpg',\n            images: '../images/soap1.jpg',\n            price: 120,\n            rating: 4.2,\n            numReviews: 44,\n            description: 'made with x, y, z'\n        },\n        {\n        \n            name: 'berry soap',\n            category: 'handmade soap',\n            image: './images/soap1.jpg',\n            images: '../images/soap1.jpg',\n            images: '../images/soap1.jpg',\n            price: 120,\n            rating: 2.5,\n            numReviews: 32,\n            description: 'made with x, y, z'\n        },\n        {\n\n            name: 'berry soap',\n            category: 'handmade soap',\n            image: './images/soap1.jpg',\n            images: '../images/soap1.jpg',\n            price: 120,\n            rating: 4.2,\n            numReviews: 55,\n            description: 'made with x, y, z'\n        },\n        {\n     \n            name: 'berry soap',\n            category: 'handmade soap',\n            image: './images/soap1.jpg',\n            images: '../images/soap1.jpg',\n            price: 120,\n            rating: 5,\n            numReviews: 2,\n            description: 'made with x, y, z'\n        },\n    ],\n};\n\nexport default data;","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport data from '../data'\nimport Rating from '../components/Rating'\nimport { Link } from 'react-router-dom'\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { detailsProduct } from '../actions/productActions';\n\n\n\nexport default function ProductScreen(props) {\n    //this is the exact value that the user enters, comparing value with item\n    // const product = ()\n    const dispatch = useDispatch();\n    const productId = props.match.params.id;\n    const [qty, setQty] = useState(1);\n    const productDetails = useSelector((state) => state.productDetails);\n    const { loading, error, product } = productDetails;\n\n    useEffect(() => {\n        dispatch(detailsProduct(productId));\n    }, [dispatch, productId]);\n\n    const addToCartHandler = () => {\n        props.history.push(`/cart/${productId}?qty=${qty}`);\n    };\n\n    return (\n        <div>\n            {loading ? (\n                <LoadingBox></LoadingBox>\n            ) : error ? (\n                <MessageBox variant=\"danger\">{error}</MessageBox>\n            ) : (\n                        <div>\n                            <div className=\"row top\">\n                                \n                                <div className=\"col-2\">\n                                    <img className=\"large\" src={product.image} alt={product.name} />\n                                </div>\n                                <div className=\"col-1\">\n                                    <ul>\n                                        <li>\n                                            <h1>{product.name}</h1>\n                                        </li>\n                                        <li>\n                                            <Rating\n                                                rating={product.rating}\n                                                numReviews={product.numReviews}></Rating>\n                                        </li>\n                                        <li><strong>Price: ${product.price}</strong></li>\n                                        <li>\n                                            <strong>Description:</strong> <p>{product.description}</p>\n                                        </li>\n                                    </ul>\n                                </div>\n                                <div className=\"col-1\">\n                                    <div className=\"card card-body\">\n                                        <ul>\n                                            <li>\n                                                <div className=\"row\">\n                                                    <div><strong>Status</strong></div>\n                                                    <div>\n                                                        {product.countInStock > 0 ? (\n                                                            <span className=\"success\">In Stock</span>\n                                                        ) : (\n                                                                <span className=\"danger\">Unavailable</span>\n                                                            )}\n                                                    </div>\n                                                </div>\n                                            </li>\n                                            {\n                                                product.countInStock > 0 && (\n                                                    <>\n                                                        <li>\n                                                            <div className=\"row\">\n                                                                <div><strong>Quantity</strong></div>\n                                                                <div>\n                                                                    <select\n                                                                        value = {qty}\n                                                                        onChange={(e) => setQty(e.target.value)}\n                                                                    >\n                                                                        {[...Array(product.countInStock).keys()].map(\n                                                                            (x) => (\n                                                                                <option key={x + 1} value={x + 1}>\n                                                                                    {x + 1}\n                                                                                </option>\n                                                                            )\n                                                                        )}\n                                                                    </select>\n                                                                </div>\n                                                            </div>\n                                                        </li>\n                                                        <li>\n                                                            <button onClick={addToCartHandler} className=\"primary block\">Add To Cart</button>\n                                                        </li>\n                                                        \n                                                    </>\n                                                )}\n                                        </ul>\n                                    </div>\n\n                                </div>\n                            </div>\n\n                        </div>\n                    )}\n        </div>\n\n    )\n}\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\nexport const CART_SAVE_SHIPPING_ADDRESS = 'SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\nexport const CART_EMPTY = 'CART_EMPTY';","import Axios from \"axios\";\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from \"../constants/cartConstants\";\n\nexport const addToCart = (productId, qty) => async(dispatch, getState) => {\n    const { data } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            product: data._id,\n            qty, \n        }\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n}\n\nexport const removeFromcart = (productId) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: productId\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({type: CART_SAVE_SHIPPING_ADDRESS, payload: data})\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\n}\n\n\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({type: CART_SAVE_PAYMENT_METHOD , payload: data })\n    \n}\n","import React, { useEffect } from 'react';\nimport { addToCart, removeFromcart } from '../actions/cartActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MessageBox from '../components/MessageBox';\nimport { Link } from 'react-router-dom';\n\nexport default function CartScreen(props) {\n    const productId = props.match.params.id;\n    const qty = props.location.search\n        ? Number(props.location.search.split('=')[1])\n        : 1;\n\n    const cart = useSelector(state => state.cart);\n    const { cartItems } = cart;\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n\n    }, [dispatch, productId, qty])\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromcart(id));\n    }\n    const checkoutHandler = () => {\n        props.history.push('/signin?redirect=shipping')\n    }\n\n\n\n    return (\n        <div className=\"row top\">\n            <div className=\"col-2\">\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? (<MessageBox>Cart is Empty, <Link to=\"/\">Start Shopping?</Link></MessageBox>\n                ) : (\n                        <ul>\n                            {\n                                cartItems.map((item) => (\n                                    <li key={item.product}>\n                                        <div className=\"row\">\n                                            <div>\n                                                <img src={item.image} alt={item.name} className=\"medium\">\n                                                </img>\n                                            </div>\n                                            <div className=\"min-30\">\n                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                            </div>\n                                            <div>\n                                                <select value={item.qty}\n                                                    onChange={(e) =>\n                                                        dispatch(\n                                                            addToCart(item.product, Number(e.target.value))\n                                                        )}>\n                                                    {[...Array(item.countInStock).keys()].map(\n                                                        (x) => (\n                                                            <option key={x + 1} value={x + 1}>\n                                                                {x + 1}\n                                                            </option>\n                                                        )\n                                                    )}\n\n                                                </select>\n                                            </div>\n                                            <div> 1 x ${item.price}</div>\n                                            <div>\n                                                <button type=\"button\" onClick={() => removeFromCartHandler(item.product)}\n                                                >Delete</button>\n                                            </div>\n                                        </div>\n                                    </li>\n                                ))\n                            }\n                        </ul>\n                    )\n                }\n                \n            </div>\n                    <div className=\"col-1\">\n                        <div className=\"card card-body\">\n                            <ul>\n                                \n                                <li>\n                                    <h2> \n                                        {/* use reduce method, which returns a single value from \n                                        an array, the arguements are the accumulator and current item, \n                                        default value for accumulator is 0 */}\n                                        Subtotal: ({cartItems.reduce((a, c) => a + c.qty, 0)} items) : $ \n                                        {cartItems.reduce((a, c) => a + c.price * c.qty, 0)} \n                                    </h2>\n                                \n                                </li>\n                                <li>\n                                    <button type=\"button\" \n                                    onClick={checkoutHandler} \n                                    className=\"primary block\" \n                                    disabled={cartItems.length === 0}>\n                                    Proceed To Checkout\n                                    </button>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n        </div>\n    );\n}","export const USER_SIGNIN_REQUEST = \"USER_SIGNIN_REQUEST\";\nexport const USER_SIGNIN_SUCCESS = \"USER_SIGNIN_SUCCESS\";\nexport const USER_SIGNIN_FAIL = \"USER_SIGNIN_FAIL\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_SIGNOUT = \"USER_SIGNOUT\";\n\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\n\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";","import React, { useState, useEffect } from 'react'\n//named exports should be in curly brackers\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signin } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\n\nexport default function SigninScreen(props) {\n    const [email, setEmail] =  useState('');\n    const [password, setPassword] = useState('');\n\n    const redirect = props.location.search \n    //split the search with ?, and get next value, so 1=1\n    ? props.location.search.split('=')[1]\n    : '/';\n\n    const userSignin = useSelector((state) => state.userSignin);\n    const { userInfo, loading, error } = userSignin;\n\n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(signin(email, password));\n    }\n\n    useEffect(() => {\n        if(userInfo) {\n            props.history.push(redirect)\n        }\n        //dependency, usually null, after action contains value now\n    }, [props.history, redirect, userInfo]);\n\n    \n    return (\n        <div>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>Sign In</h1>\n                </div>\n                {loading && <LoadingBox></LoadingBox>}\n                {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\n                <div>\n                    <label htmlFor=\"email\">Email Address</label>\n                    <input type=\"email\" id=\"email\" placeholder=\"Enter email\" required\n                    onChange={e => setEmail(e.target.value)}></input>\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" placeholder=\"Enter password\" required\n                    onChange={e => setPassword(e.target.value)}></input>\n                </div>\n                <div>\n                    <label />\n                    <button className=\"primary\" type=\"submit\">Sign In</button>\n                </div>\n                <div>\n                    <label />\n                    <div>\n                        New Customer? {''}\n                        <Link to={`/register?redirect=${redirect}`} >Create your account</Link>\n                    </div>\n                </div>\n            </form>\n        </div>\n    ) \n}\n//benefit of having template literal with redirect?\n// if you select product, go to cart, if you dont have an account\n//the redirect \n","import { USER_SIGNIN_REQUEST, USER_SIGNIN_FAIL, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_FAIL, USER_DETAILS_SUCCESS, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_SUCCESS } from \"../constants/userConstants\"\nimport Axios from \"axios\";\n\nexport const register = (name, email, password) => async(dispatch) => {\n    dispatch({ \n        type: USER_REGISTER_REQUEST,\n        payload: { name, email, password } })\n        try {\n            const {data} = await Axios.post('/api/users/register', { name, email, password })\n            dispatch({type: USER_REGISTER_SUCCESS, payload: data})\n            //TO UPDATE REDUX STORE BASED ON USERSIGN IN, \n            dispatch({type: USER_SIGNIN_SUCCESS, payload: data})\n            localStorage.setItem(\"userInfo\", JSON.stringify(data))\n        } catch(error) {\n            dispatch({ type: USER_REGISTER_FAIL,\n                payload: error.response && error.response.data.message\n                ? error.response.data.message \n                : error.message, \n            })\n        }\n}; \n\nexport const signin = (email, password) => async(dispatch) => {\n    dispatch({ \n        type: USER_SIGNIN_REQUEST,\n        payload: { email, password } })\n        try {\n            const {data} = await Axios.post('/api/users/signin', { email, password })\n            dispatch({type: USER_SIGNIN_SUCCESS, payload: data})\n            localStorage.setItem(\"userInfo\", JSON.stringify(data))\n        } catch(error) {\n            dispatch({ type: USER_SIGNIN_FAIL,\n                payload: error.response && error.response.data.message\n                ? error.response.data.message \n                : error.message, \n            })\n        }\n}; \n\nexport const signout = () => (dispatch) => {\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('cartItems');\n    localStorage.removeItem('shippingAddress');\n    dispatch({\n        type: USER_SIGNOUT \n\n    })\n}\n\nexport const detailsUser = (userId) => async (dispatch, getState) => {\n    dispatch({type: USER_DETAILS_REQUEST, payload: userId});\n    const { userSignin:{userInfo}} = getState();\n    try {\n        //use await to get real data of ajax request\n        const { data } = await Axios.get(`/api/users/${userId}`, {\n            headers: { Authorization: `Bearer ${userInfo.token}`},\n        });\n        dispatch({type: USER_DETAILS_SUCCESS, payload: data});\n    } catch(error) {\n        const message = error.response && error.response.data.message\n        ? error.response.data.message \n        : error.message;\n        dispatch({type: USER_DETAILS_FAIL, payload: message})   \n    }\n} \n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n    const { userSignin: { userInfo }} = getState();\n    try { \n        //send ajax request to update userProfile, when updating, use PUT\n        const { data } = await Axios.put(`/api/users/profile`, user, {\n            headers : { Authorization: `Bearer ${userInfo.token}`},\n        });\n        dispatch({type: USER_UPDATE_PROFILE_SUCCESS, payload: data})\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data})\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch(error) {\n        const message = error.response && error.response.data.message\n        ? error.response.data.message \n        : error.message;\n        dispatch({type: USER_UPDATE_PROFILE_FAIL, payload: message})\n    }\n}","import React, { useState, useEffect } from 'react'\n//named exports should be in curly brackers\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\n\nexport default function RegisterScreen(props) {\n    const [name, setName] =  useState('');\n    const [email, setEmail] =  useState('');\n    const [password, setPassword] = useState('');\n    const [ConfirmPassword, setConfirmPassword] = useState('');\n\n    const redirect = props.location.search \n    //split the search with ?, and get next value, so 1=1\n    ? props.location.search.split('=')[1]\n    : '/';\n\n    const userRegister = useSelector((state) => state.userRegister);\n    const { userInfo, loading, error } = userRegister;\n\n    const dispatch = useDispatch(); \n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if(password !== ConfirmPassword){\n            alert(\"Password and Confirm Password do not match\")\n        } else {\n            dispatch(register(name, email, password));\n        }\n    } \n\n    useEffect(() => {\n        if(userInfo) {\n            props.history.push(redirect)\n        }\n        //dependency, usually null, after action contains value now\n    }, [props.history, redirect, userInfo]);\n\n    \n    return (\n        <div>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>Create Account</h1>\n                </div>\n                {loading && <LoadingBox></LoadingBox>}\n                {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\n                <div>\n                    <label htmlFor=\"name\">Name</label>\n                    <input type=\"text\" id=\"name\" placeholder=\"Enter name\" required\n                    onChange={e => setName(e.target.value)}></input>\n                </div>\n                <div>\n                    <label htmlFor=\"email\">Email Address</label>\n                    <input type=\"email\" id=\"email\" placeholder=\"Enter email\" required\n                    onChange={e => setEmail(e.target.value)}></input>\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" placeholder=\"Enter password\" required\n                    onChange={e => setPassword(e.target.value)}></input>\n                </div>\n                <div>\n                    <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                    <input type=\"password\" id=\"confirmPassword\" placeholder=\"Confirm Password\" required\n                    onChange={e => setConfirmPassword(e.target.value)}></input>\n                </div>\n                <div>\n                    <label />\n                    <button className=\"primary\" type=\"submit\">Register</button>\n                </div>\n                <div>\n                    <label />\n                    <div>\n                        Already a customer? {''}\n                        <Link to={`/signin?redirect=${redirect}`}>Sign In</Link>\n                    </div>\n                </div>\n            </form> \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function CheckoutSteps(props) {\n    return (\n        <div className=\"row checkout-steps\">\n            <div className={props.step1 ? 'active' : ''}>Sign-In</div>\n            <div className={props.step2 ? 'active' : ''}>Shipping</div>\n            <div className={props.step3 ? 'active' : ''}>Payment</div>\n            <div className={props.step4 ? 'active' : ''}>Place Order</div>  \n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { savePaymentMethod } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nexport default function PaymentMethodScreen(props) {\n    const cart = useSelector((state) => state.cart);\n    const { shippingAddress } = cart;\n    if (!shippingAddress.address) {\n        props.history.push('/shipping');\n    }\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\n    const dispatch = useDispatch();\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(savePaymentMethod(paymentMethod));\n        props.history.push('/placeorder');\n    };\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3></CheckoutSteps>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>Payment Method</h1>\n                </div>\n                <div>\n                    <div>\n                        <input\n                            type=\"radio\"\n                            id=\"paypal\"\n                            value=\"PayPal\"\n                            name=\"paymentMethod\"\n                            required\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        ></input>\n                        <label htmlFor=\"paypal\">PayPal</label>\n                    </div>\n                </div>\n                <div>\n                    <div>\n                        <input\n                            type=\"radio\"\n                            id=\"stripe\"\n                            value=\"Stripe\"\n                            name=\"paymentMethod\"\n                            required\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        ></input>\n                        <label htmlFor=\"stripe\">Other</label>\n                    </div>\n                </div>\n                <div>\n                    <label />\n                    <button className=\"primary\" type=\"submit\">\n                        Continue\n          </button>\n                </div>\n            </form>\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveShippingAddress } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nexport default function ShippingAddressScreen(props) {\n    const userSignin = useSelector((state) => state.userSignin);\n    const { userInfo } = userSignin;\n    const cart = useSelector((state) => state.cart);\n    const { shippingAddress } = cart;\n    if (!userInfo) {\n        props.history.push('/signin');\n    }\n    const [fullName, setFullName] = useState(shippingAddress.fullName);\n    const [address, setAddress] = useState(shippingAddress.address);\n    const [city, setCity] = useState(shippingAddress.city);\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n    const [country, setCountry] = useState(shippingAddress.country);\n    const dispatch = useDispatch();\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(\n            saveShippingAddress({ fullName, address, city, postalCode, country })\n        );\n        props.history.push('/payment');\n    };\n    return (\n        <div>\n            <CheckoutSteps step1 step2></CheckoutSteps>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>Shipping Address</h1>\n                </div>\n                <div>\n                    <label htmlFor=\"fullName\">Full Name</label>\n                    <input\n                        type=\"text\"\n                        id=\"fullName\"\n                        placeholder=\"Enter full name\"\n                        value={fullName}\n                        onChange={(e) => setFullName(e.target.value)}\n                        required\n                    ></input>\n                </div>\n                <div>\n                    <label htmlFor=\"address\">Address</label>\n                    <input\n                        type=\"text\"\n                        id=\"address\"\n                        placeholder=\"Enter address\"\n                        value={address}\n                        onChange={(e) => setAddress(e.target.value)}\n                        required\n                    ></input>\n                </div>\n                <div>\n                    <label htmlFor=\"city\">City</label>\n                    <input\n                        type=\"text\"\n                        id=\"city\"\n                        placeholder=\"Enter city\"\n                        value={city}\n                        onChange={(e) => setCity(e.target.value)}\n                        required\n                    ></input>\n                </div>\n                <div>\n                    <label htmlFor=\"postalCode\">Postal Code</label>\n                    <input\n                        type=\"text\"\n                        id=\"postalCode\"\n                        placeholder=\"Enter postal code\"\n                        value={postalCode}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                        required\n                    ></input>\n                </div>\n                <div>\n                    <label htmlFor=\"country\">Country</label>\n                    <input\n                        type=\"text\"\n                        id=\"country\"\n                        placeholder=\"Enter country\"\n                        value={country}\n                        onChange={(e) => setCountry(e.target.value)}\n                        required\n                    ></input>\n                </div>\n                <div>\n                    <label />\n                    <button className=\"primary\" type=\"submit\">\n                        Continue\n          </button>\n                </div>\n            </form>\n        </div>\n    );\n}","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\nexport const ORDER_CREATE_RESET = \"ORDER_CREATE_RESET\";\n\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\n\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\n\nexport const ORDER_MINE_LIST_REQUEST = \"ORDER_MINE_LIST_REQUEST\";\nexport const ORDER_MINE_LIST_SUCCESS = \"ORDER_MINE_LIST_SUCCESS\";\nexport const ORDER_MINE_LIST_FAIL = \"ORDER_MINE_LIST_FAIL\";\n","import React, { useEffect } from 'react'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport { createOrder } from '../actions/orderActions';\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\nimport LoadingBox from '../components/LoadingBox'\nimport MessageBox from '../components/MessageBox'\n\n\nexport default function PlaceOrderScreen(props) {\n    const cart = useSelector((state) => state.cart);\n\n    //did customer add payment method?\n    if (!cart.paymentMethod) {\n        //how to redirect use\n        props.history.push('/payment')\n    }\n\n    const orderCreate = useSelector((state) => state.orderCreate);\n    const { loading, success, error, order } = orderCreate;\n\n    const toPrice = (num) => Number(num.toFixed(2)); //num => string => back to num \n    //the item price = cart items, reduce func calculates sum, default value equals 0 at end\n    cart.itemsPrice = toPrice(cart.cartItems.reduce((a, c) => a + c.qty * c.price, 0))\n    //calculating shipping price, can easily adjust to her preferred min/max value\n    cart.shippingPrice = cart.itemsPrice > 100 ? toPrice(0) : toPrice(10);\n    //calculating tax price, i can change based on texas's guidelines\n    cart.taxPrice = toPrice(0.15 * cart.itemsPrice);\n    //calculating total price \n    cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice;\n    const dispatch = useDispatch()\n    const placeOrderHandler = () => {\n        //as param, have cart return,\n        //use all fields of cart object and replace cart items with order items\n        dispatch(createOrder({ ...cart, orderItems: cart.cartItems }));\n    }\n    useEffect(() => {\n        if (success) {\n            props.history.push(`/orders/${order._id}`);\n            dispatch({ type: ORDER_CREATE_RESET });\n        }\n    }, [dispatch, order, props.history, success]);\n\n    //if true, this function will run\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\n            <div className=\"row top\">\n                <div className=\"col-2\">\n                    <ul>\n                        <li>\n                            <div className=\"card card-body\">\n                                <h2>Shipping:</h2>\n                                <p>\n                                    <strong>Name:</strong> {cart.shippingAddress.fullName} <br />\n                                    <strong>Address: </strong> {cart.shippingAddress.address}, <br />\n                                    {cart.shippingAddress.city},\n                                    {cart.shippingAddress.postalCode}, <br />\n                                    {cart.shippingAddress.country}\n                                </p>\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"card card-body\">\n                                <h2>Payment:</h2>\n                                <p>\n                                    <strong>Method:</strong> {cart.paymentMethod}\n                                </p>\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"card card-body\">\n                                <h2>Order Items:</h2>\n                                <ul>\n                                    {\n                                        cart.cartItems.map((item) => (\n                                            <li key={item.product}>\n                                                <div className=\"row\">\n                                                    <div>\n                                                        <img src={item.image} alt={item.name} className=\"medium\">\n                                                        </img>\n                                                    </div>\n                                                    <div className=\"min-30\">\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </div>\n\n                                                    <div>{item.qty} x ${item.price} = ${item.qty * item.price}</div>\n                                                </div>\n                                            </li>\n                                        ))\n                                    }\n                                </ul>\n\n\n\n                            </div>\n                        </li>\n                    </ul>\n\n                </div>\n                <div className=\"col-1\">\n                    <div className=\"card card-body\">\n                        <ul>\n                            <li>\n                                <h2>Order Summary</h2>\n                            </li>\n                            <li>\n                                <div className=\"row\">\n                                    <div>Items</div>\n                                    <div>${cart.itemsPrice.toFixed(2)}</div>\n                                </div>\n                            </li>\n                            <li>\n                                <div className=\"row\">\n                                    <div>Shipping</div>\n                                    <div>${cart.shippingPrice.toFixed(2)}</div>\n                                </div>\n                            </li>\n                            <li>\n                                <div className=\"row\">\n                                    <div>Tax</div>\n                                    <div>${cart.taxPrice.toFixed(2)}</div>\n                                </div>\n                            </li>\n                            <li>\n                                <div className=\"row\">\n                                    <div><strong>Order Total</strong></div>\n                                    <div><strong>${cart.totalPrice.toFixed(2)}</strong></div>\n                                </div>\n                            </li>\n                            <li>\n                                <button type=\"button\"\n                                    onClick={placeOrderHandler}\n                                    className=\"primary block\"\n                                    disabled={cart.cartItems.length === 0}>\n                                    Place Order\n                                </button>\n                            </li>\n                            {loading && <LoadingBox></LoadingBox>}\n                            {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\n\n\n                        </ul>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n","import Axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, ORDER_PAY_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_FAIL, ORDER_MINE_LIST_SUCCESS } from \"../constants/orderConstants\"\nimport { CART_EMPTY } from '../constants/cartConstants';\n\n\n\n\n//get state returns whole redux store, from store we get usersign in\n//user sign in contains the token for the sign in process of user\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    dispatch({\n        type: ORDER_CREATE_REQUEST, payload: order\n    })\n    try {\n        const { userSignin: { userInfo } } = getState()\n        //data contains message and order\n        const { data } = await Axios.post('/api/orders', order, {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        });\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order })\n        //this removes all items from shopping cart\n        dispatch({ type: CART_EMPTY });\n        //clean local storage too\n        localStorage.removeItem('cartItems');\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL, payload: error.response &&\n                error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\n    const {\n        userSignin: { userInfo },\n    } = getState();\n    try {\n        const { data } = await Axios.get(`/api/orders/${orderId}`, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\n    }\n};\n\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\n    const {userSignin : { userInfo }} = getState();\n    try {\n        const { data } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n            headers: { Authorization: `Bearer ${userInfo.token}`}\n        });\n        dispatch({ type: ORDER_PAY_SUCCESS, payload: data })\n\n    } catch (error) {\n        const message =\n        error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message;\n    dispatch({ type: ORDER_PAY_FAIL, payload: message });\n    }       \n};\n\nexport const listOrderMine = ()  => async (dispatch, getState) => {\n    dispatch({type: ORDER_MINE_LIST_REQUEST });\n    const { userSignin: {userInfo}} = getState();\n    try {\n        const { data } = await Axios.get('/api/orders/mine', {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        })\n        dispatch({type: ORDER_MINE_LIST_SUCCESS, payload: data})\n}   catch(error) {\n    const message =\n    error.response && error.response.data.message\n    ? error.response.data.message\n    : error.message;\n    dispatch({ type: ORDER_MINE_LIST_FAIL, payload: message})\n    }\n};\n","import React, { useEffect, useState } from 'react'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport LoadingBox from '../components/LoadingBox'\nimport MessageBox from '../components/MessageBox'\nimport { detailsOrder, payOrder } from '../actions/orderActions';\nimport Axios from 'axios';\nimport { ORDER_PAY_RESET } from '../constants/orderConstants';\n\n\nexport default function OrderScreen(props) {\n    const orderId = props.match.params.id;\n    const [sdkReady, setSdkReady] = useState(false);\n    const orderDetails = useSelector(state => state.orderDetails);\n    const { order, loading, error } = orderDetails;\n\n\n    const orderPay = useSelector(state => state.orderPay);\n    const { loading: loadingPay, error: errorPay, success: successPay } = orderPay;\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const addPayPalScript = async () => {\n            const { data } = await Axios.get('/api/config/paypal');\n            const script = document.createElement('script');\n            script.type = 'text/javascript';\n            script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\n            script.async = true;\n            script.onload = () => {\n                setSdkReady(true);\n            };\n            document.body.appendChild(script);\n        };\n        if (!order || successPay || (order && order._id != orderId)) {\n            dispatch({ type: ORDER_PAY_RESET });\n            dispatch(detailsOrder(orderId));\n        } else {\n            if (!order.isPaid) {\n                if (!window.paypal) {\n                    addPayPalScript();\n                } else {\n                    setSdkReady(true);\n                }\n            }\n        }\n    }, [dispatch, order, orderId, sdkReady]);\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(order, paymentResult));\n    } \n    return loading ? (\n        <LoadingBox></LoadingBox>\n    ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n    ) : (\n                <div>\n                    <h1>Order {order._id}</h1>\n                    <div className=\"row top\">\n                        <div className=\"col-2\">\n                            <ul>\n                                <li>\n                                    <div className=\"card card-body\">\n                                        <h2>Shipping</h2>\n                                        <p>\n                                            <strong>Name:</strong> {order.shippingAddress.fullName} <br />\n                                            <strong>Address: </strong> {order.shippingAddress.address},\n                                            {order.shippingAddress.city},{' '}\n                                            {order.shippingAddress.postalCode},\n                                            {order.shippingAddress.country}\n                                        </p>\n                                        {order.isDelivered ? (\n                                            <MessageBox variant=\"success\">\n                                                Delivered at {order.deliveredAt}\n                                            </MessageBox>\n                                        ) : (\n                                                <MessageBox variant=\"danger\">Not Delivered</MessageBox>\n                                            )}\n                                    </div>\n                                </li>\n                                <li>\n                                    <div className=\"card card-body\">\n                                        <h2>Payment</h2>\n                                        <p>\n                                            <strong>Method:</strong> {order.paymentMethod}\n                                        </p>\n                                        {order.isPaid ? (\n                                            <MessageBox variant=\"success\">\n                                                Paid at {order.paidAt}\n                                            </MessageBox>\n                                        ) : (\n                                                <MessageBox variant=\"danger\">Not Paid</MessageBox>\n                                            )}\n                                    </div>\n                                </li>\n                                <li>\n                                    <div className=\"card card-body\">\n                                        <h2>Order Items</h2>\n                                        <ul>\n                                            {order.orderItems.map((item) => (\n                                                <li key={item.product}>\n                                                    <div className=\"row\">\n                                                        <div>\n                                                            <img\n                                                                src={item.image}\n                                                                alt={item.name}\n                                                                className=\"small\"\n                                                            ></img>\n                                                        </div>\n                                                        <div className=\"min-30\">\n                                                            <Link to={`/product/${item.product}`}>\n                                                                {item.name}\n                                                            </Link>\n                                                        </div>\n                                                        <div>\n                                                            {item.qty} x ${item.price} = ${item.qty * item.price}\n                                                        </div>\n                                                    </div>\n                                                </li>\n                                            ))}\n                                        </ul>\n                                    </div>\n                                </li>\n                            </ul>\n                        </div>\n                        <div className=\"col-1\">\n                            <div className=\"card card-body\">\n                                <ul>\n                                    <li>\n                                        <h2>Order Summary</h2>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div>Items</div>\n                                            <div>${order.itemsPrice.toFixed(2)}</div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div>Shipping</div>\n                                            <div>${order.shippingPrice.toFixed(2)}</div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div>Tax</div>\n                                            <div>${order.taxPrice.toFixed(2)}</div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div>\n                                                <strong> Order Total</strong>\n                                            </div>\n                                            <div>\n                                                <strong>${order.totalPrice.toFixed(2)}</strong>\n                                            </div>\n                                        </div>\n                                    </li>\n                                    {!order.isPaid && (\n                                        <li>\n                                            {!sdkReady ? (\n                                                <LoadingBox></LoadingBox>\n                                            ) : (\n                                                    <>\n                                                        {errorPay && (<MessageBox variant=\"danger\">{errorPay}</MessageBox>)}\n                                                        {loadingPay && <LoadingBox></LoadingBox>}\n                                                        <PayPalButton\n                                                            amount={order.totalPrice}\n                                                            onSuccess={successPaymentHandler}\n                                                        ></PayPalButton>\n                                                    </>\n                                                )}\n                                        </li>\n                                    )}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listOrderMine } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\n\nexport default function OrderHistoryScreen(props) {\n    const orderMineList = useSelector((state) => state.orderMineList);\n    const { loading, error, orders } = orderMineList;\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(listOrderMine());\n    }, [dispatch]);\n    return (\n        <div>\n            <h1>Order History</h1>\n            {loading ? (\n                <LoadingBox></LoadingBox>\n            ) : error ? (\n                <MessageBox variant=\"danger\">{error}</MessageBox>\n            ) : (\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>DATE</th>\n                                    <th>TOTAL</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th>ACTIONS</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {orders.map((order) => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>{order.totalPrice.toFixed(2)}</td>\n                                        <td>{order.isPaid ? order.paidAt.substring(0, 10) : 'No'}</td>\n                                        <td>\n                                            {order.isDelivered\n                                                ? order.deliveredAt.substring(0, 10)\n                                                : 'No'}\n                                        </td>\n                                        <td>\n                                            <button\n                                                type=\"button\"\n                                                className=\"small\"\n                                                onClick={() => {\n                                                    props.history.push(`/orders/${order._id}`);\n                                                }}\n                                            >\n                                                Details\n                                        </button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    )}\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\n\nexport default function ProfileScreen() {\n    const [name, setName ] = useState('')\n    const [email, setEmail ] = useState('')\n    const [password, setPassword ] = useState('')\n    const [confirmPassword, setConfirmPassword ] = useState('')\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n    const userDetails = useSelector(state => state.userDetails);\n    const { loading, error, user } = userDetails;\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n    //destructure userUpdateProfile with, grabbing data from redux store\n    const { success: successUpdate, error: errorUpdate, loading: loadingUpdate } = userUpdateProfile\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        if(!user) {\n            //reset the data first\n            dispatch({type: USER_UPDATE_PROFILE_RESET})\n            dispatch(detailsUser(userInfo._id));\n        } else {\n            setName(user.name);\n            setEmail(user.email);\n        }\n    }, [dispatch, userInfo._id, user]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            alert(\"Password and Confirm Password Do Not Match\") \n        } else {\n            dispatch(updateUserProfile({userId: user._id,\n            name, email, password }))\n        }\n    }\n    return (\n        <div>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>User Profile</h1>\n                    </div>\n                    {\n                        loading? (<LoadingBox></LoadingBox>)\n                        :\n                        error? (<MessageBox variant=\"danger\">{error}</MessageBox>)\n                        : (\n                        <>\n                        { loadingUpdate && <LoadingBox></LoadingBox>}\n                        { errorUpdate && (<MessageBox variant=\"danger\">{errorUpdate}</MessageBox>)}\n                        { successUpdate && (<MessageBox variant=\"success\">Profile Updated Successfully</MessageBox>)}\n                        <div>\n                            <label htmlFor=\"name\">Update Name</label>\n                            <input id=\"name\" type=\"text\"  \n                            placeholder=\"Enter Name\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                            ></input>\n                        </div> \n                        <div>\n                            <label htmlFor=\"email\">Email</label>\n                            <input id=\"email\" type=\"email\"  \n                            placeholder=\"Enter Email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            ></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"password\">Change Password</label>\n                            <input id=\"password\" type=\"password\"  \n                            placeholder=\"Enter Password\"\n                            onChange= {(e) => setPassword(e.target.value)}\n                            ></input>\n                        \n                        </div>\n                        <div>\n                            <label htmlFor=\"confirmPassword\">Confirm Change Password</label>\n                            <input id=\"confirmPassword\" type=\"password\"  \n                            placeholder=\"Confirm Password\"\n                            onChange= {(e) => setConfirmPassword(e.target.value)} \n                            ></input>\n                        </div>\n                        <div>\n                        <label />\n                        <button className=\"primary\" type=\"submit\">\n                            Update\n                        </button>\n                        </div>\n                        </>\n                        )}\n            </form>\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom';\n\nexport default function PrivateRoute({component: Component, ...rest}) {\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n    return (\n        <Route \n        {...rest} \n        render={(props) => \n            userInfo ? ( \n            <Component {...props}></Component>\n            ):(\n            <Redirect to=\"/signin\"/>\n        )\n    }\n    ></Route>\n    );\n}\n","import React from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SigninScreen from './screens/SigninScreen';\nimport { signout } from './actions/userActions';\nimport RegisterScreen from './screens/RegisterScreen';\nimport PaymentMethodScreen from './screens/PaymentMethodScreen';\nimport ShippingAddressScreen from './screens/ShippingAddressScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport OrderHistoryScreen from './screens/OrderHistoryScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport PrivateRoute from './components/PrivateRoute';\n\nfunction App() {\n\n  const cart = useSelector(state => state.cart);\n  const { cartItems } = cart;\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n  const dispatch = useDispatch();\n  \n\n  const signoutHandler =() => {\n    dispatch(signout())\n\n\n  }\n\n  return (\n    <BrowserRouter>\n    <div className=\"grid-container\">\n      <header className=\"row\">\n        <div>\n          <Link to=\"/\" className=\"brand\">Soap & Co.</Link>\n        </div>\n        <div>\n          <Link to=\"/cart\">Cart{cartItems.length > 0 && (\n            <span className=\"badge\">{cartItems.length}</span> )}\n            </Link>\n            {\n              userInfo ? (\n                <div className=\"dropdown\">\n                <Link to=\"#\">{userInfo.name} <i className=\"fa fa-caret-down\"></i>{' '}</Link>\n                <ul className=\"dropdown-content\">\n                  <li>\n                    <Link to=\"/profile\">My Profile</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/orderhistory\">Order History</Link>\n                  </li>\n                  <Link to=\"#signout\" onClick={signoutHandler}>Sign Out</Link>\n\n                </ul>\n                </div>\n              ) : (\n                <Link to=\"/signin\">Sign In</Link>\n              )}\n            {\n              userInfo && userInfo.isAdmin && (\n                <div className=\"dropdown\">\n                  <Link to=\"#admin\">\n                    Admin <i className=\"fa fa-caret-down\"></i>\n                    </Link>\n                    <ul className=\"dropdown-content\">\n                      <li>\n                        <Link to=\"/dashboard\">DashBoard</Link>\n                      </li>\n                      <li>\n                        <Link to=\"/productlist\">Products</Link>\n                      </li>\n                      <li>\n                        <Link to=\"/orderslist\">Orders</Link>\n                      </li>\n                      <li>\n                        <Link to=\"/userlist\">Users</Link>\n                      </li>\n                      </ul>\n                </div>\n              )\n            }\n        </div>\n      </header>\n      <main>\n      <Route path=\"/cart/:id?\" component={CartScreen}></Route>\n        <Route path=\"/product/:id\" component={ProductScreen}></Route>\n        <Route path=\"/signin\" component={SigninScreen}></Route>\n        <Route path=\"/register\" component={RegisterScreen}></Route>\n        <Route path=\"/shipping\" component={ShippingAddressScreen}></Route>\n        <Route path=\"/payment\" component={PaymentMethodScreen}></Route>\n        <Route path=\"/placeorder\" component={PlaceOrderScreen}></Route>\n        <Route path=\"/orders/:id\" component={OrderScreen}></Route>\n        <Route path=\"/orderhistory\" component={OrderHistoryScreen}></Route>\n        <PrivateRoute path=\"/profile\" component={ProfileScreen}></PrivateRoute>\n        <Route exact path=\"/\" component={HomeScreen}></Route>\n        \n      </main>\n      <footer className=\"row center\">All rights reserved</footer>\n      </div>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n\n\n","const { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS } = require(\"../constants/productConstants\");\n\nexport const productListReducer = (state = { loading: true, products: [] }, action) => {\n    switch(action.type){\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true };\n        case PRODUCT_LIST_SUCCESS:\n            return {loading: false, products: action.payload };\n            case PRODUCT_LIST_FAIL:\n                return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n};\n\nexport const productDetailsReducer = (state = { product:{}, loading: true}, action) => {\n    switch (action.type){\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true };\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload };\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state\n    }\n}","import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk'\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userSigninReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderMineListReducer } from './reducers/orderReducers';\n\nconst initialState = {\n    userSignin: {\n        userInfo: localStorage.getItem('userInfo')\n        ? JSON.parse(localStorage.getItem('userInfo'))\n        : null,\n    },\n    cart: {\n        cartItems: localStorage.getItem('cartItems')\n        ? JSON.parse(localStorage.getItem('cartItems'))\n        : [], \n        shippingAddress: localStorage.getItem('shippingAddress')\n        ? JSON.parse(localStorage.getItem('shippingAddress'))\n        : {},\n        paymentMethod: 'PayPal',\n    },\n};\nconst reducer = combineReducers({ \n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userSignin: userSigninReducer,\n    userRegister: userRegisterReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderMineList: orderMineListReducer,\n    userDetails: userDetailsReducer, \n    userUpdateProfile: userUpdateProfileReducer\n\n})\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer (applyMiddleware(thunk)) );\n\nexport default store;","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS, CART_EMPTY } from \"../constants/cartConstants\";\n\nexport const cartReducer = (state = { cartItems: []}, action) => {\n    switch(action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload;\n            const existItem = state.cartItems.find(x => x.product === item.product);\n            if(existItem){\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map((x) => x.product === existItem.product ? \n                        item : x ),\n                };\n            } else {\n                //adding new items to existing array of items\n                return {...state, cartItems: [...state.cartItems, item]};\n            }\n            case CART_REMOVE_ITEM:\n                //filtering out product whos id is equal to action.payload aka productId, will remove from ID\n                return { ...state, cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n                };\n            case CART_SAVE_SHIPPING_ADDRESS:\n                return {...state, shippingAddress: action.payload\n                };\n            case CART_SAVE_PAYMENT_METHOD:\n                return {...state, paymentMethod: action.payload}\n            case CART_EMPTY:\n                //setting cart items to empty array\n                return {...state, carItems: [] };\n        default:\n            return state;\n    }\n}","import { USER_SIGNIN_SUCCESS, USER_SIGNIN_REQUEST, USER_SIGNIN_FAIL, USER_SIGNOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch(action.type) { \n        case USER_REGISTER_REQUEST:\n            return {loading: true};\n        case USER_REGISTER_SUCCESS:\n            return {loading: false, userInfo: action.payload };\n        case USER_REGISTER_FAIL:\n            return {loading: false, error: action.payload };\n        default:\n            return state;\n    } \n} \n\nexport const userSigninReducer = (state = {}, action) => {\n    switch(action.type) { \n        case USER_SIGNIN_REQUEST:\n            return {loading: true};\n        case USER_SIGNIN_SUCCESS:\n            return {loading: false, userInfo: action.payload };\n        case USER_SIGNIN_FAIL:\n            return {loading: false, error: action.payload };\n        case USER_SIGNOUT:\n            return {};\n        default:\n            return state;\n    }\n}\n\nexport const userDetailsReducer = (state = { loading: true }, action) => {\n    switch(action.type){\n        case USER_DETAILS_REQUEST:\n            return { loading: true};\n        case USER_DETAILS_SUCCESS:\n            return {loading: false, user: action.payload}\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload}\n        default: \n            return state\n    }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch(action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return {loading: true};\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return {loading: false, success: true}\n        case USER_UPDATE_PROFILE_FAIL:\n            return {loading: false, error: action.payload}\n        case USER_UPDATE_PROFILE_RESET:\n            return {};\n        default:\n            return state;\n    }\n\n}","import { ORDER_CREATE_SUCCESS, ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_RESET, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_SUCCESS, ORDER_PAY_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_RESET, ORDER_MINE_LIST_FAIL, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_SUCCESS } from \"../constants/orderConstants\";\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return { loading: true };\n        case ORDER_CREATE_SUCCESS:\n            return { loading: false, success: true, order: action.payload };\n        case ORDER_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n        case ORDER_CREATE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n//at beginning of loading, we need to load data, order object empty\nexport const orderDetailsReducer = (\n    state = { loading: true },\n    action\n) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return { loading: true };\n        case ORDER_DETAILS_SUCCESS:\n            return { loading: false, order: action.payload };\n        case ORDER_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch(action.type) {\n        case ORDER_PAY_REQUEST:\n            return { loading: true } ;\n        case ORDER_PAY_SUCCESS:\n            return {loading: false, success: true }\n        case ORDER_PAY_FAIL:\n            return { loading: false, error: action.payload }\n        case ORDER_PAY_RESET:\n            return {};\n        default: \n            return state;\n    }\n}\n\nexport const orderMineListReducer = (state = { orders: [] }, action) => {\n    switch(action.type) {\n        case ORDER_MINE_LIST_REQUEST:\n            return { loading: true};\n        case ORDER_MINE_LIST_SUCCESS:\n            return { loading: false, orders: action.payload};\n        case ORDER_MINE_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n  \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}